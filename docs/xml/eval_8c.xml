<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="eval_8c" kind="file" language="C++">
    <compoundname>eval.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">dlfcn.h</includes>
    <includes refid="util_8h" local="yes">util.h</includes>
    <includes refid="lexer_8h" local="yes">lexer.h</includes>
    <includes refid="parse_8h" local="yes">parse.h</includes>
    <includes refid="l__std_8h" local="yes">l_std.h</includes>
    <includes refid="obj_8c" local="yes">obj.c</includes>
    <includes refid="eval_8h" local="yes">eval.h</includes>
    <includedby refid="main_8c" local="yes">/home/bugy/projs/lobotomy/src/main.c</includedby>
    <incdepgraph>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="1">
        <label>/home/bugy/projs/lobotomy/src/eval.c</label>
        <link refid="eval_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>eval.h</label>
        <link refid="eval_8h"/>
      </node>
      <node id="9">
        <label>assert.h</label>
      </node>
      <node id="10">
        <label>float.h</label>
      </node>
      <node id="20">
        <label>l_std.h</label>
        <link refid="l__std_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="18">
        <label>SHM/hashmap.h</label>
        <link refid="SHM_2hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>wchar.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="19">
        <label>linked_list.h</label>
        <link refid="linked__list_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>time.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="15">
        <label>lexer.h</label>
        <link refid="lexer_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>parse.h</label>
        <link refid="parse_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>obj.c</label>
        <link refid="obj_8c"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>obj.h</label>
        <link refid="obj_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="6">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/bugy/projs/lobotomy/src/eval.c</label>
        <link refid="eval_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/bugy/projs/lobotomy/src/main.c</label>
        <link refid="main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="eval_8c_1ad4fb240fa7df36c609a9107a166064ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_less_than</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_less_than</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>DOC</para>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="21" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="21" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a7d199208fe61ba29b4c7ea9fe787702c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_more_than</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_more_than</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="39" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a18a1221a1edff515f64c6110a5e9e9ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_less_or_eq_than</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_less_or_eq_than</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="49" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a251e43c27b60a626bad6b3b2a913bfa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_more_or_eq_than</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_more_or_eq_than</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="58" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1aa5b464a6cf57dc10cc768bc9f094839b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_eq</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_eq</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="67" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="67" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a32c5d0a62787386f7024d65e0a5fd152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_car</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_car</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="97" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1aa1a9a591feaffa60920ab6eae85879a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_get_input</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_get_input</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="107" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="107" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a356beef9314ed9207ea8919449785879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_cdr</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_cdr</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="124" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="124" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1ac8c76bcc40b0f63f664273f4bcfb7d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_list</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_list</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="135" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="135" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a48ce89bdc89656f631f90e1cce67806d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_nth</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_nth</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="144" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="144" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a97fcc5fb77dfc6c817d0531fc6449c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_exit</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_exit</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="157" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1af0f04595e66237ccdb41eebe17a8f6e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_progn</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_progn</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="166" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1acd120084c28c232f9e3698b31886a7b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_test</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_test</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="176" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="176" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1abd430801d907b8da3864e41c78c950b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_print</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_print</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="184" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="184" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a21a1dc39af88e719ea0d2fce93860b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_type</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_type</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="203" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="203" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a6f50c955fc4d416861ac9d904f8e84be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_help</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_help</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="211" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="211" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a6a1c5f34458e71ece858f679d394d9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_create_fn</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_create_fn</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="220" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="220" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a4ef8ec1c1ba73db593d49c9c37d23720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_obj_name</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_obj_name</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="237" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="237" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a6ffe71f9336fc2ac49bced3663418386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_let</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_let</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="246" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="246" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1aa1e684ddf082e1d5e21e31fdf4f31e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_loop</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_loop</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="317" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="317" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1afe4bdc20829386e23795d610feb81f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_cond</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_cond</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="366" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="366" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a90653db80a81bc831fc811dc9c88daf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_copy</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_copy</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="395" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="395" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1aec4a831fb8f7dff8ab61536544b9e7d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_get_random_num</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_get_random_num</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="403" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="403" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a312bf32f5c8a2351a189177fe238eb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_use</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_use</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="417" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="417" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a680fd583eff272ba70c58bee9c65351d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* L_load</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>L_load</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="423" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="423" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1ab2bd43fb46de88a6a5423ab5bd6c9756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* preeval_symbols</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>preeval_symbols</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="452" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="452" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1adb847aa5db0cf7d45779e5323f572095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* preeval</definition>
        <argsstring>(OBJ *o)</argsstring>
        <name>preeval</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="490" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="490" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a1cdc600bb2b74bf0be20959c5707af4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_env</definition>
        <argsstring>(OBJ *head, ENV *e)</argsstring>
        <name>set_env</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>head</declname>
        </param>
        <param>
          <type><ref refid="obj_8h_1a3cf8df4c53c907fcf7a53617956c43c2" kindref="member">ENV</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="581" column="6" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="581" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1adf1e9c7a5dd15dd1001311e8961ef427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* run_func</definition>
        <argsstring>(OBJ *fn, OBJ *args)</argsstring>
        <name>run_func</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="590" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="590" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
        <definition>OBJ* __eval</definition>
        <argsstring>(OBJ *head)</argsstring>
        <name>__eval</name>
        <param>
          <type><ref refid="structOBJ" kindref="compound">OBJ</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="663" column="5" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="663" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1ad79a38016d7a07d169447f944e407548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eval_program_file</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>eval_program_file</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="740" column="6" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="740" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="eval_8c_1a41d61d7afc35290fee08acbf31161859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eval_program</definition>
        <argsstring>(const char text[])</argsstring>
        <name>eval_program</name>
        <param>
          <type>const char</type>
          <declname>text</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/eval.c" line="747" column="6" bodyfile="/home/bugy/projs/lobotomy/src/eval.c" bodystart="747" bodyend="764"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dlfcn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lexer_8h" kindref="compound">lexer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parse_8h" kindref="compound">parse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="l__std_8h" kindref="compound">l_std.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="obj_8c" kindref="compound">obj.c</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="eval_8h" kindref="compound">eval.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1ad4fb240fa7df36c609a9107a166064ff" kindref="member">L_less_than</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1aa5d7d57bf0fdbed31316480959ef84a1" kindref="member">print_objf</ref>(</highlight><highlight class="stringliteral">&quot;less<sp/>than:<sp/>&quot;</highlight><highlight class="normal">,<sp/>o);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(o-&gt;type<sp/>==<sp/>T_IDENTIFIER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;num<sp/>=<sp/>(o-&gt;car-&gt;num<sp/>&lt;<sp/>NT(o)-&gt;num);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>(o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>&lt;<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;num);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a7d199208fe61ba29b4c7ea9fe787702c" kindref="member">L_more_than</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>(o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>&gt;<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;num);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a18a1221a1edff515f64c6110a5e9e9ea" kindref="member">L_less_or_eq_than</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>(o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>&lt;=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;num);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a251e43c27b60a626bad6b3b2a913bfa2" kindref="member">L_more_or_eq_than</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>(o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>&gt;=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;num);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1aa5b464a6cf57dc10cc768bc9f094839b" kindref="member">L_eq</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>:<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea6cc4b533d086313980cb3d2455d4119d" kindref="member">T_DECIMAL</ref>:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref><sp/>||<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea6cc4b533d086313980cb3d2455d4119d" kindref="member">T_DECIMAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>(o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>==<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;num);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>types<sp/>for<sp/>comparison:<sp/>trying<sp/>to<sp/>compare<sp/>&apos;%s&apos;<sp/>and<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="obj_8c_1a4c7dc3a5200a4923b368108e9ecbac21" kindref="member">type_name</ref>(o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref>),<sp/><ref refid="obj_8c_1a4c7dc3a5200a4923b368108e9ecbac21" kindref="member">type_name</ref>(<ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;type));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eab0caeb1d37ca0a20fce4464a80ef4111" kindref="member">T_STR</ref>:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eab0caeb1d37ca0a20fce4464a80ef4111" kindref="member">T_STR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>!strcmp(o-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref>,<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;str);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>types<sp/>for<sp/>comparison:<sp/>trying<sp/>to<sp/>compare<sp/>&apos;%s&apos;<sp/>and<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="obj_8c_1a4c7dc3a5200a4923b368108e9ecbac21" kindref="member">type_name</ref>(o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref>),<sp/><ref refid="obj_8c_1a4c7dc3a5200a4923b368108e9ecbac21" kindref="member">type_name</ref>(<ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o)-&gt;type));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a32c5d0a62787386f7024d65e0a5fd152" kindref="member">L_car</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a0ff4ee4239a3c797e1c4e85d2e7d55a1" kindref="member">print_obj_simple</ref>(o-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>NIL;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1aa1a9a591feaffa60920ab6eae85879a1" kindref="member">L_get_input</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>!=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eae711a251b1feff34fd9b1337a3caa6aa" kindref="member">T_NIL</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a521cc030b81fe690acc65f15f5d95703" kindref="member">__print_obj_simple</ref>(o);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x[200]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(x,<sp/>200,<sp/>stdin);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>strlen(x);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eab0caeb1d37ca0a20fce4464a80ef4111" kindref="member">T_STR</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref><sp/>=<sp/>malloc(l);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>x[l-1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(ret-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref>,<sp/>x);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a356beef9314ed9207ea8919449785879" kindref="member">L_cdr</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea7d71804aa7657b5efe565b8c8eb2ccb0" kindref="member">T_LIST</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref><sp/>=<sp/>o-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;obj:<sp/>&quot;,<sp/>o-&gt;cdr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1ac8c76bcc40b0f63f664273f4bcfb7d1b" kindref="member">L_list</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea7d71804aa7657b5efe565b8c8eb2ccb0" kindref="member">T_LIST</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref><sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>o-&gt;cdr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a48ce89bdc89656f631f90e1cce67806d" kindref="member">L_nth</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>list<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(o);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/>list-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(tmp);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1a90653db80a81bc831fc811dc9c88daf2" kindref="member">L_copy</ref>(tmp);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a97fcc5fb77dfc6c817d0531fc6449c45" kindref="member">L_exit</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref>(0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref>(o-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1af0f04595e66237ccdb41eebe17a8f6e2" kindref="member">L_progn</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ITERATE_OBJ(o,<sp/>curr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1acd120084c28c232f9e3698b31886a7b4" kindref="member">L_test</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;pp:<sp/>%p\n&quot;,<sp/>o-&gt;cdr-&gt;cdr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1abd430801d907b8da3864e41c78c950b0" kindref="member">L_print</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>o<sp/>=<sp/>NT(o);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>o<sp/>=<sp/>preeval(o);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;type:<sp/>%s\n&quot;,<sp/>type_name(o-&gt;cdr-&gt;type));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a3cb9f0894fab1c8fbb0753c9c7c2a8d9" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;print&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a7efb121fca71b2964ab4e48b76ec1128" kindref="member">print_obj_full</ref>(tmp);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(L_list(tmp));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ITERATE_OBJECT(NT(tmp),<sp/>curr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__print_obj_simple(__eval(curr));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;print&gt;&gt;&quot;,<sp/>NT(tmp));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a21a1dc39af88e719ea0d2fce93860b2f" kindref="member">L_type</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(o);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a3cb9f0894fab1c8fbb0753c9c7c2a8d9" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="obj_8c_1a4c7dc3a5200a4923b368108e9ecbac21" kindref="member">type_name</ref>(o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref>));</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a6f50c955fc4d416861ac9d904f8e84be" kindref="member">L_help</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>-&gt;size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>-&gt;list[i].key<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a3cb9f0894fab1c8fbb0753c9c7c2a8d9" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;::&gt;<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>-&gt;list[i].key);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a6a1c5f34458e71ece858f679d394d9f3" kindref="member">L_create_fn</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>fn<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>name<sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>args<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(name);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>body<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(args);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1aa5d7d57bf0fdbed31316480959ef84a1" kindref="member">print_objf</ref>(</highlight><highlight class="stringliteral">&quot;fn:<sp/>&quot;</highlight><highlight class="normal">,<sp/>body);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>fn-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>=<sp/>name-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>fn-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ead44b94de1da3c13a848deb5759e9f9d0" kindref="member">T_FN</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>fn-&gt;<ref refid="structOBJ_1a1a9bb40092cbc720ccdf99365292d26b" kindref="member">args</ref>=args;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>fn-&gt;<ref refid="structOBJ_1a493440883218ce089dfd91547a91b934" kindref="member">body</ref>=body;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a0e5a7962b223a44a11319e48d58004cc" kindref="member">env_add</ref>(global_env,<sp/>fn);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fn;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a4ef8ec1c1ba73db593d49c9c37d23720" kindref="member">L_obj_name</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1a8232508d91e1747ea70bd1dc55ba0acd" kindref="member">NEW</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eab0caeb1d37ca0a20fce4464a80ef4111" kindref="member">T_STR</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref><sp/>=<sp/>o-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a6ffe71f9336fc2ac49bced3663418386" kindref="member">L_let</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>var<sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>!=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea141e88afb82d0cd392318a5c3534c33a" kindref="member">T_IDENTIFIER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>var-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>var-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea141e88afb82d0cd392318a5c3534c33a" kindref="member">T_IDENTIFIER</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>var<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(var);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>val<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(var);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(val);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/>ENV_GET(global_env,<sp/>var-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea9c5c7533b65f70c615307c5d149b7fee" kindref="member">T_EXPR</ref>){<ref refid="obj_8h_1a3cb9f0894fab1c8fbb0753c9c7c2a8d9" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;xxx\n&quot;</highlight><highlight class="normal">);<sp/>ret<sp/>=<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(val-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>);}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="eval_8c_1a90653db80a81bc831fc811dc9c88daf2" kindref="member">L_copy</ref>(val);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>=<sp/>var-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;\npp:<sp/>%s\n&quot;,<sp/>ret-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;blabla:<sp/>%s<sp/>:&quot;,<sp/>ret-&gt;name);<sp/>print_obj_simple(ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENV_ADD(global_env,<sp/>ret-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>,<sp/>ret);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(ENV_GET(&amp;global_env,<sp/>var-&gt;name));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea9c5c7533b65f70c615307c5d149b7fee" kindref="member">T_EXPR</ref>)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>*<ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(val-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>*val;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref><sp/>=<sp/>var-&gt;<ref refid="structOBJ_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;blabla:<sp/>&quot;);<sp/>print_obj_simple(ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1a90653db80a81bc831fc811dc9c88daf2" kindref="member">L_copy</ref>(ret);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(var-&gt;car<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;\neee\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(val-&gt;type<sp/>==<sp/>T_EXPR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;xxx\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OBJ*<sp/>tmp<sp/>=<sp/>__eval(val-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>var-&gt;car<sp/>=<sp/>malloc(tmp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*var-&gt;car<sp/>=<sp/>*tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>var-&gt;car<sp/>=<sp/>malloc(sizeof(val));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*var-&gt;car<sp/>=<sp/>*L_copy(val);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>var-&gt;car-&gt;name<sp/>=<sp/>var-&gt;name;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>printf(&quot;\npp:<sp/>%s\n&quot;,<sp/>ret-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;blabla:<sp/>&quot;);<sp/>print_obj_simple(var-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>var-&gt;car<sp/>=<sp/>ENV_ADD(&amp;global_env,<sp/>var-&gt;name,<sp/>var-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>var;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(val-&gt;type<sp/>==<sp/>T_EXPR){printf(&quot;xxx\n&quot;);<sp/>*var-&gt;car<sp/>=<sp/>*__eval(val-&gt;car);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*var-&gt;car<sp/>=<sp/>*val;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>var;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1aa1e684ddf082e1d5e21e31fdf4f31e5d" kindref="member">L_loop</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>cond_expr<sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cond_expr<sp/>=<sp/>preeval(cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cond_expr-&gt;car<sp/>=<sp/>preeval_symbols(cond_expr-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;cond_exprp:<sp/>%s&quot;,<sp/>type_name(cond_expr-&gt;cdr-&gt;car-&gt;type));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1aa5d7d57bf0fdbed31316480959ef84a1" kindref="member">print_objf</ref>(</highlight><highlight class="stringliteral">&quot;cond_expr:<sp/>&quot;</highlight><highlight class="normal">,<sp/>cond_expr);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>exec_expr<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(cond_expr);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exec_expr<sp/>=<sp/>preeval(exec_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exec_expr-&gt;car<sp/>=<sp/>preeval_symbols(exec_expr-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1aa5d7d57bf0fdbed31316480959ef84a1" kindref="member">print_objf</ref>(</highlight><highlight class="stringliteral">&quot;exec_expr:<sp/>&quot;</highlight><highlight class="normal">,<sp/>exec_expr);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preeval(cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preeval(exec_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/>NIL;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a4f2705df522fd01ea20cea002f2d4304" kindref="member">printd</ref>(</highlight><highlight class="stringliteral">&quot;loop<sp/>starting<sp/>now\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(cond_expr-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;tmp:<sp/>&quot;);<sp/>print_obj_simple(tmp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;cond_expr:<sp/>&quot;,<sp/>cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;exec_expr:<sp/>&quot;,<sp/>exec_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(loop<sp/>(&lt;<sp/>a<sp/>10)<sp/>(let<sp/>a<sp/>(+<sp/>a<sp/>2)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;aaaaa:<sp/>&quot;);<sp/>print_obj_simple(tmp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(loop<sp/>(a)<sp/>(let<sp/>a<sp/>(+<sp/>a<sp/>2)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;aaaaa&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(exec_expr-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>__print_obj_full(__eval(exec_expr-&gt;car));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>usleep(200);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sleep(1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>ret:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>NT(o);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1afe4bdc20829386e23795d610feb81f7e" kindref="member">L_cond</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OBJ*<sp/>cond_expr<sp/>=<sp/>NT(o);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;cond_expr:<sp/>&quot;,<sp/>cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OBJ*<sp/>exec_expr<sp/>=<sp/>NT(cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;exec_expr:<sp/>&quot;,<sp/>exec_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/>NIL;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a9f01fe02cc375ece93297c3f34f763ef" kindref="member">ITERATE_OBJECT_PAIR</ref>(o,<sp/>cond_expr,<sp/>exec_expr)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;cond_expr:<sp/>&quot;,<sp/>cond_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;exec_expr:<sp/>&quot;,<sp/>exec_expr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(cond_expr-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;tmp:<sp/>&quot;,<sp/>tmp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>||<sp/>tmp-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea66901c4f0f0cf6cd9002834b1f8f2075" kindref="member">T_TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printd(&quot;aaa:<sp/>%s\n&quot;,<sp/>exec_expr-&gt;car-&gt;cdr-&gt;env-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(exec_expr);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>ret:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a90653db80a81bc831fc811dc9c88daf2" kindref="member">L_copy</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>*o;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>NIL;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1aec4a831fb8f7dff8ab61536544b9e7d5" kindref="member">L_get_random_num</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1a2257fb022ed4e979225cdf9d6048ff65" kindref="member">empty_obj_t</ref>(<ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a95fc76296e1d8cd7af09bc36dce0974f" kindref="member">num</ref><sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;t:<sp/>%d&quot;,<sp/>ret-&gt;num);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>!=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eae711a251b1feff34fd9b1337a3caa6aa" kindref="member">T_NIL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="l__std_8h_1a22a8ad934e32d44281d194b914c64f97" kindref="member">L_mod</ref>(ret);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>o<sp/>=<sp/>preeval(NT(o));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;num<sp/>%=<sp/>o-&gt;num;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a312bf32f5c8a2351a189177fe238eb57" kindref="member">L_use</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="eval_8c_1ad79a38016d7a07d169447f944e407548" kindref="member">eval_program_file</ref>(o-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a680fd583eff272ba70c58bee9c65351d" kindref="member">L_load</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a305c8182d607e7f1f3c15fbc454a7265" kindref="member">load_lib_func</ref><sp/>fn<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(o-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>x[len+3];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>xx[len+5];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(x,<sp/>o-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(xx,<sp/>o-&gt;<ref refid="structOBJ_1ab50d783982593ef993ea0b68f7ad8b80" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(x,<sp/></highlight><highlight class="stringliteral">&quot;.so&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(xx,<sp/></highlight><highlight class="stringliteral">&quot;_load&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a4f2705df522fd01ea20cea002f2d4304" kindref="member">printd</ref>(</highlight><highlight class="stringliteral">&quot;strcat:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a4f2705df522fd01ea20cea002f2d4304" kindref="member">printd</ref>(</highlight><highlight class="stringliteral">&quot;strcat:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>xx);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>dlopen(</highlight><highlight class="stringliteral">&quot;./sample_module.so&quot;</highlight><highlight class="normal">,<sp/>RTLD_NOW<sp/>|<sp/>RTLD_GLOBAL);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>load<sp/>library<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>dlsym(handle,<sp/>xx);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fn<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;unable<sp/>to<sp/>load<sp/>library<sp/>&apos;%s&apos;<sp/>because<sp/>%s<sp/>couldn&apos;t<sp/>be<sp/>loaded\n&quot;</highlight><highlight class="normal">,<sp/>x,<sp/>xx);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="util_8h_1a4f2705df522fd01ea20cea002f2d4304" kindref="member">printd</ref>(</highlight><highlight class="stringliteral">&quot;load:<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>fn);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(global_env);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NIL;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1ab2bd43fb46de88a6a5423ab5bd6c9756" kindref="member">preeval_symbols</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>head<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1ab91d02dc63defade63583c31c17334be" kindref="member">ITERATE_OBJECT</ref>(o,<sp/>curr)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="obj_8h_1aa5d7d57bf0fdbed31316480959ef84a1" kindref="member">print_objf</ref>(</highlight><highlight class="stringliteral">&quot;curr:<sp/>&quot;</highlight><highlight class="normal">,<sp/>curr);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(curr-&gt;type)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea141e88afb82d0cd392318a5c3534c33a" kindref="member">T_IDENTIFIER</ref>:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="obj_8c_1a14f09d8c7f0794cef89a7e17a9b7274e" kindref="member">env_get</ref>(o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>,<sp/>curr-&gt;name);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;cdr<sp/>=<sp/>empty_obj();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*ret-&gt;cdr<sp/>=<sp/>*tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>curr;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref><sp/>=<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eae3514db66d821cd913d6ff84ac030ad0" kindref="member">T_REF</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>T_EXPR:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;cdr<sp/>=<sp/>preeval_symbols(curr-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>curr;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(head);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1aa565bd0cece59599d7f8bdaac3f5537b" kindref="member">GC_free</ref>(tmp);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ooo<sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>ret<sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DO_THIS(&amp;o,<sp/>ret);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>head<sp/>=<sp/>ret;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1ab91d02dc63defade63583c31c17334be" kindref="member">ITERATE_OBJECT</ref>(o,<sp/>curr)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(curr-&gt;type)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea141e88afb82d0cd392318a5c3534c33a" kindref="member">T_IDENTIFIER</ref>:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="obj_8c_1a14f09d8c7f0794cef89a7e17a9b7274e" kindref="member">env_get</ref>(o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>,<sp/>curr-&gt;name);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;cdr<sp/>=<sp/>tmp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>*tmp;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;Variable<sp/>&apos;%s&apos;<sp/>&apos;%s&apos;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,<sp/>curr-&gt;name,<sp/>o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>-&gt;name);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea9c5c7533b65f70c615307c5d149b7fee" kindref="member">T_EXPR</ref>:</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;occuring<sp/>for:<sp/>%s\n&quot;,<sp/>curr-&gt;car-&gt;name);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;cdr<sp/>=<sp/>__eval(curr-&gt;car);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(curr-&gt;car);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea7d71804aa7657b5efe565b8c8eb2ccb0" kindref="member">T_LIST</ref>:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>*curr-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref><sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(curr-&gt;car);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eae3514db66d821cd913d6ff84ac030ad0" kindref="member">T_REF</ref>:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>curr-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/>*curr;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/>=<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(head);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1aa565bd0cece59599d7f8bdaac3f5537b" kindref="member">GC_free</ref>(tmp);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a91f10efe27d68e6e0310af89c0a72dfb" kindref="member">ITERATE_OBJECT_PTR</ref>(o,<sp/>curr)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*curr)-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea141e88afb82d0cd392318a5c3534c33a" kindref="member">T_IDENTIFIER</ref>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>tmp<sp/>=<sp/><ref refid="obj_8c_1a14f09d8c7f0794cef89a7e17a9b7274e" kindref="member">env_get</ref>(o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>,<sp/>(*curr)-&gt;name);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>*tmp;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;cdr<sp/>=<sp/>(*curr)-&gt;cdr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;Variable<sp/>&apos;%s&apos;<sp/>&apos;%s&apos;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">,<sp/>(*curr)-&gt;name,<sp/>o-&gt;<ref refid="structOBJ_1ab082a901a23e5315ca84dd0c984d58f1" kindref="member">env</ref>-&gt;name);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*curr)-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea9c5c7533b65f70c615307c5d149b7fee" kindref="member">T_EXPR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>*<ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>((*curr)-&gt;car);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*curr)-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea7d71804aa7657b5efe565b8c8eb2ccb0" kindref="member">T_LIST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*ret<sp/>=<sp/>**curr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>*<ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>((*curr)-&gt;car);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref><sp/>=<sp/><ref refid="obj_8c_1afef0f8196de8986895bc02ecbbaf2529" kindref="member">empty_obj</ref>();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ret<sp/>=<sp/>**curr;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ret-&gt;<ref refid="structOBJ_1a6b6699c1641de1410bbd6e1f85a0f837" kindref="member">cdr</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret-&gt;cdr<sp/>=<sp/>empty_obj();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a0ff4ee4239a3c797e1c4e85d2e7d55a1" kindref="member">print_obj_simple</ref>(<ref refid="eval_8c_1ac8c76bcc40b0f63f664273f4bcfb7d1b" kindref="member">L_list</ref>(ooo));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a0ff4ee4239a3c797e1c4e85d2e7d55a1" kindref="member">print_obj_simple</ref>(<ref refid="eval_8c_1ac8c76bcc40b0f63f664273f4bcfb7d1b" kindref="member">L_list</ref>(head));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1a1cdc600bb2b74bf0be20959c5707af4f" kindref="member">set_env</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>head,<sp/><ref refid="obj_8h_1a3cf8df4c53c907fcf7a53617956c43c2" kindref="member">ENV</ref>*<sp/>e)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1ab91d02dc63defade63583c31c17334be" kindref="member">ITERATE_OBJECT</ref>(head,<sp/>curr)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea9c5c7533b65f70c615307c5d149b7fee" kindref="member">T_EXPR</ref><sp/>||<sp/>curr-&gt;type<sp/>==<sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea7d71804aa7657b5efe565b8c8eb2ccb0" kindref="member">T_LIST</ref>)<sp/><ref refid="eval_8c_1a1cdc600bb2b74bf0be20959c5707af4f" kindref="member">set_env</ref>(curr-&gt;car,<sp/>e);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr-&gt;env<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1adf1e9c7a5dd15dd1001311e8961ef427" kindref="member">run_func</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>fn,<sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>args)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/><ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(args);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;args:<sp/>&quot;,<sp/>args);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;args:<sp/>&quot;,<sp/>NT(args));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a3cf8df4c53c907fcf7a53617956c43c2" kindref="member">ENV</ref>*<sp/>e<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="obj_8h_1a3cf8df4c53c907fcf7a53617956c43c2" kindref="member">ENV</ref>));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>ENV_INIT(e,<sp/>20);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;fn&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>e-&gt;parent<sp/>=<sp/>global_env;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OBJ*<sp/>curr1<sp/>=<sp/>fn;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ITERATE_OBJECT(args,<sp/>curr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;saaa:<sp/>&quot;,<sp/>curr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(fn-&gt;fn.args);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="obj_8h_1a9ddf29c6e2b3e9193f3ebb9fd3beec2a" kindref="member">ZIP_ITERATE_OBJECT</ref>(fn-&gt;<ref refid="structOBJ_1a1a9bb40092cbc720ccdf99365292d26b" kindref="member">args</ref>-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>,<sp/>args,<sp/>curr,<sp/>curr1,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr-&gt;env<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr1-&gt;env<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;saaa:<sp/>&quot;,<sp/>curr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_objf(&quot;saaa1:<sp/>&quot;,<sp/>curr1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr1-&gt;name<sp/>=<sp/>curr-&gt;name;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_add(e,<sp/>L_copy(curr1));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(fn-&gt;body);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="eval_8c_1a1cdc600bb2b74bf0be20959c5707af4f" kindref="member">set_env</ref>(fn-&gt;body,<sp/>e);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;\ngot<sp/>here\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(fn-&gt;body-&gt;car);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>void<sp/>lobotomy_init()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>ENV_ADD(global_env,<sp/>&quot;+&quot;,<sp/>create_cfn(&quot;+&quot;,<sp/>lobotomy_add));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;+&quot;,<sp/>create_cfn(&quot;+&quot;,<sp/>L_add));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;-&quot;,<sp/>create_cfn(&quot;-&quot;,<sp/>L_subtract));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;*&quot;,<sp/>create_cfn(&quot;*&quot;,<sp/>L_multiply));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;/&quot;,<sp/>create_cfn(&quot;/&quot;,<sp/>L_divide));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;&amp;&quot;,<sp/>create_cfn(&quot;&amp;&quot;,<sp/>L_and));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;|&quot;,<sp/>create_cfn(&quot;|&quot;,<sp/>L_or));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;xor&quot;,<sp/>create_cfn(&quot;xor&quot;,<sp/>L_xor));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>ENV_ADD(global_env,<sp/>&quot;%&quot;,<sp/>create_cfn(&quot;%&quot;,<sp/>L_modulo));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;loop&quot;,<sp/>create_cfn(&quot;loop&quot;,<sp/>L_loop));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;&lt;&quot;,<sp/>create_cfn(&quot;&lt;&quot;,<sp/>L_less_than));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;&lt;=&quot;,<sp/>create_cfn(&quot;&lt;=&quot;,<sp/>L_less_or_eq_than));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;&gt;&quot;,<sp/>create_cfn(&quot;&gt;&quot;,<sp/>L_more_than));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;&gt;=&quot;,<sp/>create_cfn(&quot;&gt;=&quot;,<sp/>L_more_or_eq_than));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;let&quot;,<sp/>create_cfn(&quot;let&quot;,<sp/>L_let));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;print&quot;,<sp/>create_cfn(&quot;print&quot;,<sp/>L_print));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;type&quot;,<sp/>create_cfn(&quot;type&quot;,<sp/>L_type));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;exit&quot;,<sp/>create_cfn(&quot;exit&quot;,<sp/>L_exit));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ENV_ADD(global_env,<sp/>&quot;help&quot;,<sp/>create_cfn(&quot;help&quot;,<sp/>L_help));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;cdr&quot;,<sp/>L_cdr));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;car&quot;,<sp/>L_car));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;tést&quot;,<sp/>L_test));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;fn&quot;,<sp/>L_create_fn));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;obj-name&quot;,<sp/>L_obj_name));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;test&quot;,<sp/>L_test));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>env_add(global_env,<sp/>create_cfn(&quot;input&quot;,<sp/>L_get_input));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>env_add(global_env,<sp/>create_cfn(&quot;=&quot;,<sp/>L_eq));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>env_add(global_env,<sp/>create_cfn(&quot;is?&quot;,<sp/>L_is_same_obj));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(<ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>head)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;allocated:<sp/>%d\n&quot;,<sp/>gc.allocated);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structOBJ" kindref="compound">OBJ</ref>*<sp/>o;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(head-&gt;type)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea9c5c7533b65f70c615307c5d149b7fee" kindref="member">T_EXPR</ref>:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(<ref refid="eval_8c_1adb847aa5db0cf7d45779e5323f572095" kindref="member">preeval</ref>(head-&gt;car));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea7d71804aa7657b5efe565b8c8eb2ccb0" kindref="member">T_LIST</ref>:</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea368ba65e0bf0f76505c831f6516d17fc" kindref="member">T_NUM</ref>:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eab0caeb1d37ca0a20fce4464a80ef4111" kindref="member">T_STR</ref>:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea6cc4b533d086313980cb3d2455d4119d" kindref="member">T_DECIMAL</ref>:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eac489cf3871b0975cb8019f773eda6cdb" kindref="member">T_C_FN</ref>:</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head-&gt;c_fn(head);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ead44b94de1da3c13a848deb5759e9f9d0" kindref="member">T_FN</ref>:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1adf1e9c7a5dd15dd1001311e8961ef427" kindref="member">run_func</ref>(head,<sp/>head-&gt;cdr);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ea141e88afb82d0cd392318a5c3534c33a" kindref="member">T_IDENTIFIER</ref>:</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head-&gt;name<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/><ref refid="obj_8c_1a14f09d8c7f0794cef89a7e17a9b7274e" kindref="member">env_get</ref>(head-&gt;env,<sp/>head-&gt;name);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>==<sp/>NULL)<sp/>{<ref refid="obj_8h_1a3cb9f0894fab1c8fbb0753c9c7c2a8d9" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>not<sp/>found<sp/>in<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>head-&gt;name,<sp/>head-&gt;env-&gt;name);<sp/><ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref>(-1);<sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eac489cf3871b0975cb8019f773eda6cdb" kindref="member">T_C_FN</ref>:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o-&gt;<ref refid="structOBJ_1a3b5f8ac5990692795b17d185e9294646" kindref="member">c_fn</ref>(<ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(head));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ead44b94de1da3c13a848deb5759e9f9d0" kindref="member">T_FN</ref>:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1adf1e9c7a5dd15dd1001311e8961ef427" kindref="member">run_func</ref>(o,<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(head));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(o);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eae3514db66d821cd913d6ff84ac030ad0" kindref="member">T_REF</ref>:</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(head-&gt;car<sp/>==<sp/>NULL)<sp/>return<sp/>head;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>head-&gt;<ref refid="structOBJ_1a7d38952916caef94a84c922e4d15fc88" kindref="member">car</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>==<sp/>NULL)<sp/>{<ref refid="obj_8h_1a3cb9f0894fab1c8fbb0753c9c7c2a8d9" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;&apos;%s&apos;<sp/>not<sp/>found<sp/>in<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>head-&gt;name,<sp/>head-&gt;env-&gt;name);<sp/><ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref>(-1);<sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(o-&gt;<ref refid="structOBJ_1a79da2848e0aa990f3bfb6bbc679adb07" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121eac489cf3871b0975cb8019f773eda6cdb" kindref="member">T_C_FN</ref>:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o-&gt;<ref refid="structOBJ_1a3b5f8ac5990692795b17d185e9294646" kindref="member">c_fn</ref>(<ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(head));</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="obj_8h_1a714b9c2c276fbae637fee36453d9121ead44b94de1da3c13a848deb5759e9f9d0" kindref="member">T_FN</ref>:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1adf1e9c7a5dd15dd1001311e8961ef427" kindref="member">run_func</ref>(o,<sp/><ref refid="obj_8h_1a179a6093bc435cbca8f4c1abb79db64c" kindref="member">NT</ref>(head));</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1abc535bec3835990a732280e1de9808ac" kindref="member">LOBOTOMY_WARNING</ref>(</highlight><highlight class="stringliteral">&quot;[%s]<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">,<sp/><ref refid="obj_8c_1a4c7dc3a5200a4923b368108e9ecbac21" kindref="member">type_name</ref>(head-&gt;type));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1ad79a38016d7a07d169447f944e407548" kindref="member">eval_program_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text<sp/>=<sp/><ref refid="util_8h_1a56bcf160a30371294d1e91c99540553e" kindref="member">read_file</ref>(filename);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="eval_8c_1a41d61d7afc35290fee08acbf31161859" kindref="member">eval_program</ref>(text);</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="eval_8c_1a41d61d7afc35290fee08acbf31161859" kindref="member">eval_program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>text[])</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OBJ_LIST*<sp/>parsed<sp/>=<sp/>parse(text);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ITERATE_LINKED_LIST_VN(OBJ_LIST,<sp/>parsed,<sp/>OBJ,<sp/>head)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print_obj_simple(__eval(head));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLEXER" kindref="compound">LEXER</ref><sp/>lexer<sp/>=<sp/><ref refid="lexer_8h_1ab9a6fc96b92482b6807fa125d7c19af8" kindref="member">tokenize</ref>(text);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lexer.<ref refid="structLEXER_1ab3ced33ac8e367d2e28289b43bc99623" kindref="member">tokens</ref>[lexer.<ref refid="structLEXER_1a53b2e5f39966b20bc672afaaaf9edf86" kindref="member">peek</ref>].<ref refid="structTOKEN_1a5633b1433389cec21ade3811bbe9ca5b" kindref="member">text</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>head<sp/>=<sp/>parse_expr(&amp;lexer,<sp/>0).head;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="obj_8c_1a0ff4ee4239a3c797e1c4e85d2e7d55a1" kindref="member">print_obj_simple</ref>(<ref refid="eval_8c_1a3cacabecfef3ff34c772815a0cae488d" kindref="member">__eval</ref>(<ref refid="parse_8h_1ae8423d9c5ce3c748b61cc34888a2dafd" kindref="member">parse_expr</ref>(&amp;lexer,<sp/>0).head));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lexer.<ref refid="structLEXER_1a53b2e5f39966b20bc672afaaaf9edf86" kindref="member">peek</ref>++;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/bugy/projs/lobotomy/src/eval.c"/>
  </compounddef>
</doxygen>
