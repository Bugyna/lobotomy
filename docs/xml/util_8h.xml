<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="util_8h" kind="file" language="C++">
    <compoundname>util.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">float.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">wchar.h</includes>
    <includes refid="error_8h" local="yes">error.h</includes>
    <includedby refid="eval_8c" local="yes">/home/bugy/projs/lobotomy/src/eval.c</includedby>
    <includedby refid="lexer_8h" local="yes">/home/bugy/projs/lobotomy/src/lexer.h</includedby>
    <includedby refid="parse_8h" local="yes">/home/bugy/projs/lobotomy/src/parse.h</includedby>
    <includedby refid="obj_8h" local="yes">/home/bugy/projs/lobotomy/src/obj.h</includedby>
    <includedby refid="hashmap_8h" local="yes">/home/bugy/projs/lobotomy/src/hashmap.h</includedby>
    <includedby refid="main_8c" local="yes">/home/bugy/projs/lobotomy/src/main.c</includedby>
    <includedby refid="tui_8h" local="yes">/home/bugy/projs/lobotomy/src/tui.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdbool.h</label>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="8">
        <label>float.h</label>
      </node>
      <node id="9">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>wchar.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>time.h</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="1">
        <label>/home/bugy/projs/lobotomy/src/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/bugy/projs/lobotomy/src/eval.c</label>
        <link refid="eval_8c"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/bugy/projs/lobotomy/src/l_std.h</label>
        <link refid="l__std_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/bugy/projs/lobotomy/src/tui.h</label>
        <link refid="tui_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/bugy/projs/lobotomy/src/hashmap.h</label>
        <link refid="hashmap_8h"/>
      </node>
      <node id="9">
        <label>/home/bugy/projs/lobotomy/src/sample_module.c</label>
        <link refid="sample__module_8c"/>
      </node>
      <node id="3">
        <label>/home/bugy/projs/lobotomy/src/main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="10">
        <label>/home/bugy/projs/lobotomy/src/gc.h</label>
        <link refid="gc_8h"/>
      </node>
      <node id="4">
        <label>/home/bugy/projs/lobotomy/src/lexer.h</label>
        <link refid="lexer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/bugy/projs/lobotomy/src/parse.h</label>
        <link refid="parse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/bugy/projs/lobotomy/src/util.h</label>
        <link refid="util_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/bugy/projs/lobotomy/src/obj.c</label>
        <link refid="obj_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/bugy/projs/lobotomy/src/obj.h</label>
        <link refid="obj_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="util_8h_1a5134b2f308b8e125e5f987ac66222050" prot="public" static="no">
        <name>exit</name>
        <initializer><ref refid="util_8h_1ac89271d33116a9d352b136a66b6f626d" kindref="member">_lobotomy_exit</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="17" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a969c7c1ebb4f70581e040a3034b14ee0" prot="public" static="no">
        <name>u64</name>
        <initializer>uint64_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="22" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a332ccd83dfe2973e6cb2b61e4f3ab7e6" prot="public" static="no">
        <name>u32</name>
        <initializer>uint32_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="23" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a2b19d553290a8d4a083d3c03280ea800" prot="public" static="no">
        <name>u16</name>
        <initializer>uint16_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="24" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1af3b86d961da0a3575b4f99c9ffaf01fd" prot="public" static="no">
        <name>u8</name>
        <initializer>uint8_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="25" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aa777e5139adfca31612ec04bc2b26845" prot="public" static="no">
        <name>i64</name>
        <initializer>int64_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="27" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a832509ea197065489f1d60b6d7958cbf" prot="public" static="no">
        <name>i32</name>
        <initializer>int32_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="28" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a3e01dd59d72c4919aa21a46fa5299e23" prot="public" static="no">
        <name>i16</name>
        <initializer>int16_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="29" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a8b1c3ba7ed71c46505556d43a9bee9e1" prot="public" static="no">
        <name>i8</name>
        <initializer>int8_t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="30" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a4f2705df522fd01ea20cea002f2d4304" prot="public" static="no">
        <name>printd</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="66" column="10" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ac6c62456062b60acb9d5ffe2702c7ed7" prot="public" static="no">
        <name>HASHMAP_HASH_INIT</name>
        <initializer>2166136261u</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="69" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="util_8h_1a0198640928326ecdb7cbb77e009a2d62" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* _lobotomy_exit_func) (int n)</definition>
        <argsstring>)(int n)</argsstring>
        <name>_lobotomy_exit_func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="13" column="9" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="util_8h_1ac89271d33116a9d352b136a66b6f626d" prot="public" static="no" mutable="no">
        <type><ref refid="util_8h_1a0198640928326ecdb7cbb77e009a2d62" kindref="member">_lobotomy_exit_func</ref></type>
        <definition>_lobotomy_exit_func _lobotomy_exit</definition>
        <argsstring></argsstring>
        <name>_lobotomy_exit</name>
        <initializer>= &amp;<ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="14" column="21" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="util_8h_1aa8309d2be920c08db6f2fa7682a5ea5d" prot="public" static="no" mutable="no">
        <type><ref refid="util_8h_1a0198640928326ecdb7cbb77e009a2d62" kindref="member">_lobotomy_exit_func</ref></type>
        <definition>_lobotomy_exit_func _real_exit</definition>
        <argsstring></argsstring>
        <name>_real_exit</name>
        <initializer>= &amp;<ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="15" column="21" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8h_1a56bcf160a30371294d1e91c99540553e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* read_file</definition>
        <argsstring>(const char path[])</argsstring>
        <name>read_file</name>
        <param>
          <type>const char</type>
          <declname>path</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="32" column="6" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="32" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a8ed83b84953e6c55bd98ffac2e3fd21d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t nhash</definition>
        <argsstring>(const char *data)</argsstring>
        <name>nhash</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="71" column="24" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="71" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash</definition>
        <argsstring>(const char *key)</argsstring>
        <name>hash</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/bugy/projs/lobotomy/src/util.h" line="114" column="5" bodyfile="/home/bugy/projs/lobotomy/src/util.h" bodystart="114" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="util_8h_1a0198640928326ecdb7cbb77e009a2d62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="util_8h_1a0198640928326ecdb7cbb77e009a2d62" kindref="member">_lobotomy_exit_func</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="14" refid="util_8h_1ac89271d33116a9d352b136a66b6f626d" refkind="member"><highlight class="normal"><ref refid="util_8h_1a0198640928326ecdb7cbb77e009a2d62" kindref="member">_lobotomy_exit_func</ref><sp/><ref refid="util_8h_1ac89271d33116a9d352b136a66b6f626d" kindref="member">_lobotomy_exit</ref><sp/>=<sp/>&amp;<ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref>;</highlight></codeline>
<codeline lineno="15" refid="util_8h_1aa8309d2be920c08db6f2fa7682a5ea5d" refkind="member"><highlight class="normal"><ref refid="util_8h_1a0198640928326ecdb7cbb77e009a2d62" kindref="member">_lobotomy_exit_func</ref><sp/><ref refid="util_8h_1aa8309d2be920c08db6f2fa7682a5ea5d" kindref="member">_real_exit</ref><sp/>=<sp/>&amp;<ref refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" kindref="member">exit</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="util_8h_1a5134b2f308b8e125e5f987ac66222050" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>exit<sp/>_lobotomy_exit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8h" kindref="compound">error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="util_8h_1a969c7c1ebb4f70581e040a3034b14ee0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>u64<sp/>uint64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="util_8h_1a332ccd83dfe2973e6cb2b61e4f3ab7e6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>u32<sp/>uint32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="util_8h_1a2b19d553290a8d4a083d3c03280ea800" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>u16<sp/>uint16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="util_8h_1af3b86d961da0a3575b4f99c9ffaf01fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>u8<sp/>uint8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="util_8h_1aa777e5139adfca31612ec04bc2b26845" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>i64<sp/>int64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="util_8h_1a832509ea197065489f1d60b6d7958cbf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>i32<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="util_8h_1a3e01dd59d72c4919aa21a46fa5299e23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>i16<sp/>int16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="util_8h_1a8b1c3ba7ed71c46505556d43a9bee9e1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>i8<sp/>int8_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="util_8h_1a56bcf160a30371294d1e91c99540553e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="util_8h_1a56bcf160a30371294d1e91c99540553e" kindref="member">read_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[])</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dst<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>read<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(file,<sp/>0,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>malloc(size+2);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(file,<sp/>0,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>c;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;i++)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>fgetc(file);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>EOF)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst[i]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;s:<sp/>%s\n&quot;,<sp/>dst);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUGGING<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>printd(...)<sp/>printf(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="util_8h_1a4f2705df522fd01ea20cea002f2d4304" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>printd(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="util_8h_1ac6c62456062b60acb9d5ffe2702c7ed7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HASHMAP_HASH_INIT<sp/>2166136261u</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>nhash(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>strlen(data);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>size<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>=<sp/><ref refid="util_8h_1ac6c62456062b60acb9d5ffe2702c7ed7" kindref="member">HASHMAP_HASH_INIT</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nblocks;<sp/>++i)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>^=<sp/>(uint64_t)data[0]<sp/>&lt;&lt;<sp/>0<sp/>|<sp/>(uint64_t)data[1]<sp/>&lt;&lt;<sp/>8<sp/>|</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)data[2]<sp/>&lt;&lt;<sp/>16<sp/>|<sp/>(uint64_t)data[3]<sp/>&lt;&lt;<sp/>24<sp/>|</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)data[4]<sp/>&lt;&lt;<sp/>32<sp/>|<sp/>(uint64_t)data[5]<sp/>&lt;&lt;<sp/>40<sp/>|</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint64_t)data[6]<sp/>&lt;&lt;<sp/>48<sp/>|<sp/>(uint64_t)data[7]<sp/>&lt;&lt;<sp/>56;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>*=<sp/>0xbf58476d1ce4e5b9;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>last<sp/>=<sp/>size<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(size<sp/>%<sp/>8)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[6]<sp/>&lt;&lt;<sp/>56;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[5]<sp/>&lt;&lt;<sp/>48;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[4]<sp/>&lt;&lt;<sp/>40;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[3]<sp/>&lt;&lt;<sp/>32;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[2]<sp/>&lt;&lt;<sp/>24;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[1]<sp/>&lt;&lt;<sp/>16;<sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>|=<sp/>(uint64_t)data[0]<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>^=<sp/>last;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>*=<sp/>0xd6e8feb86659fd93;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compress<sp/>to<sp/>a<sp/>32-bit<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>serves<sp/>as<sp/>a<sp/>finalizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)(<ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>^<sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref><sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util_8h_1a837545d852dbedf0b642ae0f8e1b7d67" kindref="member">hash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>my_assert(key<sp/>==<sp/>NULL,<sp/>&quot;fuckery<sp/>in<sp/>hash&quot;,<sp/>-1,<sp/>0,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8h_1a168deda0bc3b2da8c582f7ab3f4c228c" kindref="member">lobotomy_error</ref>(</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>hash<sp/>an<sp/>empty<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>strlen(key);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>strlen(key);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>+=<sp/>(int)key[i];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask<sp/>^<sp/>(mask<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/bugy/projs/lobotomy/src/util.h"/>
  </compounddef>
</doxygen>
